stations = {}
stations[“kone”] = set([“id”, “nv”, “ut”])
stations[“ktwo”] = set([“wa”, “id”, “mt”])
stations[“kthree”] = set([“or”, “nv”, “ca”])
stations[“kfour”] = set([“nv”, “ut”])
stations[“kfive”] = set([“ca”, “az”])
final_stations = set()
---------------------------------------------------------
best_station = None
states_covered = set()
for station, states_for_station in stations.items():
covered = states_needed & states_for_station 
if len(covered) > len(states_covered):
 best_station = station
 states_covered = covered
 covered = states_needed & states_for_station
 ---------------------------------------------------------
 For Example:
 
>>> fruits = set([“avocado”, “tomato”, “banana”])
>>> vegetables = set([“beets”, “carrots”, “tomato”])
>>> fruits | vegetables This is a set union.
set([“avocado”, “beets”, “carrots”, “tomato”, “banana”])
>>> fruits & vegetables This is a set intersection.
set([“tomato”])
>>> fruits – vegetables This is a set difference.
set([“avocado”, “banana”])
>>> vegetables – fruits What do you think this will do?

---------------------------------------------------------------
states_needed

while states_needed:
 best_station = None
 states_covered = set()
 for station, states in stations.items():
 covered = states_needed & states
 if len(covered) > len(states_covered):
 best_station = station
 states_covered = covered
states_needed -= states_covered
final_stations.add(best_station)
>>> print final_stations
set([‘ktwo’, ‘kthree’, ‘kone’, ‘kfive’])
